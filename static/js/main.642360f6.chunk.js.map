{"version":3,"sources":["components/app-header/index.js","components/app-header/app-header.js","components/roster-list-item/index.js","components/roster-list-item/roster-list-item.js","components/roster-list/index.js","components/roster-list/roster-list.js","components/search-panel/index.js","components/search-panel/search-panel.js","components/worker-status-filter/index.js","components/worker-status-filter/worker-status-filter.js","components/add-worker-btn/index.js","components/add-worker-btn/add-worker-btn.js","services/local-storage-service.js","services/local-storage-init.js","components/add-worker-form/index.js","components/add-worker-form/add-worker-form.js","components/worker-info/index.js","components/worker-info/worker-info.js","components/app/index.js","components/app/app.js","index.js"],"names":["AppHeader","count","className","RosterListItem","mainInfo","job","fullName","name","first","last","middle","position","workDates","dismisDate","empDate","type","title","RosterList","listItems","workers","map","item","id","itemProps","SearchPanel","placeholder","React","Component","WorkerStatusFilter","buttons","label","btns","this","AddWorkerBtn","SRStorage","checkInit","init","key","JSON","parse","localStorage","getItem","getStorageItem","getWorkersIds","val","setItem","stringify","new_ids","setItemToStorage","sort","worker","setId","positions","workersList","birthDay","sex","hasDriveLicense","NaN","ids","keys","find","every","forEach","pushItemToStorage","AddWorkerForm","_storage","getPositions","pos","idx","htmlFor","value","defaultChecked","WorkerInfo","App","getWorkersData","length","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.642360f6.chunk.js","sourcesContent":["import AppHeader from './app-header';\r\n\r\nexport default AppHeader;\r\n","import React from 'react';\r\nimport './app-header.css';\r\n\r\nconst AppHeader = ( { count } ) => {\r\n  return (\r\n    <div className=\"d-flex app-header\">\r\n      <h1>Реестр сотрудников</h1>\r\n      <h2>Всего сотрудников: { count }</h2>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AppHeader;\r\n","import RosterListItem from './roster-list-item';\r\n\r\nexport default RosterListItem;\r\n","import React from 'react';\r\n\r\nimport './roster-list-item.css';\r\n\r\nconst RosterListItem = ({ mainInfo, job }) => {\r\n  const fullName = `${mainInfo.name.first} ${mainInfo.name.last} ${mainInfo.name.middle}`;\r\n  const position = `Профессия: ${job.position}`;\r\n  const workDates = !job.dismisDate ? `Работает с ${job.empDate}` : `Работал с ${job.empDate} по ${job.dismisDate}`\r\n\r\n  return (\r\n    <div className=\"roster-list-item\">\r\n\r\n      <span className=\"roster-list-item-clickzone\">\r\n        <span className=\"roster-list-item-name\">\r\n          { fullName }\r\n        </span>\r\n        <span className=\"roster-list-item-info\">\r\n          <p>{ position }</p>\r\n          <p>{ workDates }</p>\r\n        </span>\r\n      </span>\r\n      <span className=\"roster-list-item-btns\">\r\n        <button\r\n          type=\"button\"\r\n          className=\"btn btn-outline-success btn-sm\"\r\n          title=\"Редактировать\">\r\n            <i className=\"fa fa-pencil\"></i>\r\n        </button>\r\n        <button\r\n          type=\"button\"\r\n          className=\"btn btn-outline-danger btn-sm\"\r\n          title=\"Удалить\">\r\n            <i className=\"fa fa-trash-o\"></i>\r\n        </button>\r\n      </span>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default RosterListItem;\r\n","import RosterList from './roster-list';\r\n\r\nexport default RosterList;\r\n","import React from 'react';\r\n\r\nimport RosterListItem from '../roster-list-item'\r\nimport './roster-list.css';\r\n\r\nconst RosterList = ( { workers } ) => {\r\n  const listItems = workers.map(\r\n    (item) => {\r\n      const { id, ...itemProps } = item\r\n      return (\r\n        <li key={ id } className=\"list-group-item\">\r\n          <RosterListItem\r\n          { ...itemProps } />\r\n        </li>\r\n      );\r\n    }\r\n  );\r\n\r\n  return (\r\n    <ul className=\"list-group roster-list\">\r\n      { listItems }\r\n    </ul>\r\n  );\r\n};\r\n\r\nexport default RosterList;\r\n","import SearchPanel from './search-panel';\r\n\r\nexport default SearchPanel;\r\n","import React from 'react';\r\nimport './search-panel.css';\r\n\r\nexport default class SearchPanel extends React.Component {\r\n  constructor () {\r\n    super();\r\n  };\r\n\r\n  render () {\r\n    return (\r\n      <input\r\n        type=\"text\"\r\n        className=\"form-control search-input\"\r\n        placeholder=\"Введите имя для поиска...\" />\r\n    );\r\n  };\r\n};\r\n","import WorkerStatusFilter from './worker-status-filter';\r\n\r\nexport default WorkerStatusFilter;\r\n","import React from 'react';\r\n\r\nimport './worker-status-filter.css';\r\n\r\nexport default class WorkerStatusFilter extends React.Component {\r\n  constructor() {\r\n    super();\r\n\r\n    this.buttons = [\r\n      {name: 'all', label: 'Все'},\r\n      {name: 'stillWork', label: 'Работают'},\r\n      {name: 'dismissed', label: 'Уволены'}\r\n    ];\r\n  }\r\n\r\n  render() {\r\n    const btns = this.buttons.map(( {name, label} ) => {\r\n      return (\r\n        <button type=\"button\"\r\n                className=\"btn btn-outline-info btn-sm\"\r\n                key={ name }>\r\n                { label }\r\n        </button>\r\n      );\r\n    });\r\n\r\n    return (\r\n      <div className=\"btn-group\">\r\n        { btns }\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import AddWorkerBtn from './add-worker-btn';\r\n\r\nexport default AddWorkerBtn;\r\n","import React from 'react';\r\n\r\nimport './add-worker-btn.css';\r\n\r\nexport default class AddWorkerBtn extends React.Component {\r\n  constructor() {\r\n    super();\r\n\r\n  };\r\n\r\n  render() {\r\n    return (\r\n        <button\r\n          className=\"btn btn-primary float-right add-btn\">\r\n            Добавить сотрудника\r\n        </button>\r\n    );\r\n  }\r\n}\r\n","import SRStorageInit from './local-storage-init';\r\n\r\nexport default class SRStorage extends SRStorageInit {\r\n  constructor() {\r\n    super();\r\n    \r\n    if (!this.checkInit()) {\r\n      this.init();\r\n    }\r\n  }\r\n\r\n  // get\r\n  getStorageItem(key) {\r\n    return JSON.parse(localStorage.getItem(key))\r\n  }\r\n\r\n  getWorkersIds() {\r\n    return this.getStorageItem(\"ids\");\r\n  }\r\n\r\n  getWorkersData() {\r\n    return this.getWorkersIds().map((id) => {\r\n      return this.getStorageItem(id);\r\n    });\r\n  }\r\n\r\n  getPositions() {\r\n    return this.getStorageItem(\"positions\");\r\n  }\r\n\r\n  // set\r\n  setItemToStorage(key, val) {\r\n    localStorage.setItem(key, JSON.stringify(val));\r\n  }\r\n\r\n  setId(id) {\r\n    const new_ids = [ ...this.getWorkersIds(), id ];\r\n    this.setItemToStorage(\"ids\", new_ids.sort())\r\n  }\r\n\r\n  setWorker(worker) {\r\n    this.setId(worker.id);\r\n    this.setItemToStorage(worker.id, worker);\r\n  }\r\n}\r\n","export default class SRStorageInit {\r\n  positions = [\r\n    \"Junior Frontend\",\r\n    \"Middle Frontend\",\r\n    \"Senior Frontend\",\r\n    \"Junior Backend\",\r\n    \"Middle Backend\",\r\n    \"Senior Backend\",\r\n    \"Fullstack\",\r\n    \"HR-Manager\"\r\n  ];\r\n\r\n  workersList = [\r\n    {\r\n      id: \"000\",\r\n      mainInfo: {\r\n        name: {\r\n          first: \"Иванов\",\r\n          last: \"Иван\",\r\n          middle: \"Иваныч\"\r\n        },\r\n        birthDay: \"04.11.1982\",\r\n        sex: \"male\",\r\n        hasDriveLicense: false\r\n      },\r\n      job:{\r\n        position: \"Frontend\",\r\n        empDate: \"12.02.2006\",\r\n        dismisDate: NaN\r\n      }\r\n    },\r\n    {\r\n      id: \"001\",\r\n      mainInfo: {\r\n        name: {\r\n          first: \"Петров\",\r\n          last: \"Петр\",\r\n          middle: \"Петрович\"\r\n        },\r\n        birthDay: \"17.04.1976\",\r\n        sex: \"male\",\r\n        hasDriveLicense: true\r\n      },\r\n      job:{\r\n        position: \"Backend\",\r\n        empDate: \"19.06.2004\",\r\n        dismisDate: \"06.10.2012\"\r\n      }\r\n    },\r\n    {\r\n      id: \"002\",\r\n      mainInfo: {\r\n        name: {\r\n          first: \"Трухин\",\r\n          last: \"Егор\",\r\n          middle: \"Юрьевич\"\r\n        },\r\n        birthDay: \"20.06.2000\",\r\n        sex: \"male\",\r\n        hasDriveLicense: false\r\n      },\r\n      job:{\r\n        position: \"Junior Frontend\",\r\n        empDate: \"08.10.2020\",\r\n        dismisDate: NaN\r\n      }\r\n    }\r\n  ];\r\n\r\n  ids = this.workersList.map(worker => {\r\n    return worker.id;\r\n  });\r\n\r\n  keys = [\"ids\", ...this.ids, \"positions\"];\r\n\r\n  pushItemToStorage(key, val) {\r\n    localStorage.setItem(key, JSON.stringify(val));\r\n  }\r\n\r\n  getWorkerWithoutId(id) {\r\n    const { mainInfo, job } = this.workersList.find(item => item.id === id);\r\n    return { mainInfo, job };\r\n  }\r\n\r\n  checkInit() {\r\n    return this.keys.every((key) => {\r\n      return localStorage.getItem(key) != null;\r\n    });\r\n  }\r\n\r\n  init() {\r\n    this.keys.forEach((key) => {\r\n      if (!localStorage.getItem(key)) {\r\n        switch (key) {\r\n          case \"ids\":\r\n            this.pushItemToStorage(key, this.ids);\r\n            break;\r\n          case \"positions\":\r\n            this.pushItemToStorage(key, this.positions);\r\n            break;\r\n          default:\r\n            this.pushItemToStorage(key,\r\n              this.workersList.find(item => item.id === key));\r\n        }\r\n      }\r\n    });\r\n  }\r\n}\r\n","import AddWorkerForm from './add-worker-form';\r\n\r\nexport default AddWorkerForm;\r\n","import React from 'react';\r\nimport SRStorage from '../../services/local-storage-service';\r\nimport './add-worker-form.css';\r\n\r\nexport default class AddWorkerForm extends React.Component {\r\n  constructor() {\r\n    super();\r\n\r\n    this._storage = new SRStorage();\r\n\r\n    this.positions = this._storage\r\n        .getPositions()\r\n        .map((pos, idx) => {\r\n          return (\r\n            <option key={ idx }>{ pos }</option>\r\n          )\r\n        });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"form-container card border-primary mb-3\">\r\n        <div className=\"card-header\">\r\n          Добавить нового сотрудника\r\n        </div>\r\n\r\n        <div className=\"card-body\">\r\n          <form>\r\n            <div className=\"form-group\">\r\n              <label>Данные ФИО</label>\r\n              <div className=\"form-group\">\r\n                <input type=\"text\" className=\"form-control\" placeholder=\"Фамилия\" />\r\n                <input type=\"text\" className=\"form-control\" placeholder=\"Имя\" />\r\n                <input type=\"text\" className=\"form-control\" placeholder=\"Отчество\" />\r\n              </div>\r\n            </div>\r\n\r\n            <div className=\"form-group\">\r\n              <label htmlFor=\"job-select\">Должность</label>\r\n              <select className=\"custom-select\" id=\"job-select\">\r\n                { this.positions }\r\n              </select>\r\n            </div>\r\n\r\n            <div className=\"form-group\">\r\n              <legend>Пол</legend>\r\n              <div className=\"custom-control custom-checkbox\">\r\n                <input type=\"radio\" className=\"custom-control-input\" name=\"optionsSex\" id=\"optionMale\" value=\"male\" defaultChecked/>\r\n                <label className=\"custom-control-label\" htmlFor=\"optionMale\">Мужской</label>\r\n              </div>\r\n              <div className=\"custom-control custom-checkbox\">\r\n                <input type=\"radio\" className=\"custom-control-input\" name=\"optionsSex\" id=\"optionFemale\" value=\"female\"/>\r\n                <label className=\"custom-control-label\" htmlFor=\"optionFemale\">Женский</label>\r\n              </div>\r\n            </div>\r\n\r\n            <div className=\"form-group\">\r\n              <legend>Наличие прав</legend>\r\n              <div className=\"custom-control custom-checkbox\">\r\n                <input type=\"checkbox\" className=\"custom-control-input\" id=\"noLic\" defaultChecked/>\r\n                <label className=\"custom-control-label\" htmlFor=\"noLic\">Нет</label>\r\n              </div>\r\n              <div className=\"custom-control custom-checkbox\">\r\n                <input type=\"checkbox\" className=\"custom-control-input\" id=\"cat-A\"/>\r\n                <label className=\"custom-control-label\" htmlFor=\"cat-A\">Категория А</label>\r\n              </div>\r\n              <div className=\"custom-control custom-checkbox\">\r\n                <input type=\"checkbox\" className=\"custom-control-input\" id=\"cat-B\"/>\r\n                <label className=\"custom-control-label\" htmlFor=\"cat-B\">Категория В</label>\r\n              </div>\r\n              <div className=\"custom-control custom-checkbox\">\r\n                <input type=\"checkbox\" className=\"custom-control-input\" id=\"cat-C\"/>\r\n                <label className=\"custom-control-label\" htmlFor=\"cat-C\">Категория С</label>\r\n              </div>\r\n            </div>\r\n\r\n            <button type=\"submit\" className=\"btn btn-sm btn-primary\">Добавить</button>\r\n            <button type=\"button\" className=\"btn btn-sm btn-outline-secondary\">Отменить</button>\r\n          </form>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import WorkerInfo from './worker-info.js';\r\n\r\nexport default WorkerInfo;\r\n","import React from 'react';\r\nimport './worker-info.css';\r\n\r\nexport default class WorkerInfo extends React.Component {\r\n  constructor() {\r\n    super();\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"info-container card border-primary mb-3\">\r\n        <div className=\"card-header\">Информация о сотруднике</div>\r\n        <div className=\"card-body\">\r\n\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n};\r\n","import App from './app.js';\r\n\r\nexport default App;\r\n","import React from 'react';\r\n\r\nimport './app.css';\r\n\r\nimport AppHeader from '../app-header';\r\nimport RosterList from '../roster-list';\r\nimport SearchPanel from '../search-panel';\r\nimport WorkerStatusFilter from '../worker-status-filter';\r\nimport AddWorkerBtn from '../add-worker-btn';\r\n\r\nimport AddWorkerForm from '../add-worker-form';\r\nimport WorkerInfo from '../worker-info';\r\n\r\nimport SRStorage from '../../services/local-storage-service';\r\n\r\nexport default class App extends React.Component {\r\n  constructor() {\r\n    super();\r\n\r\n    this._storage = new SRStorage();\r\n\r\n    this.workersList = this._storage.getWorkersData()\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"staff-roster-app card border-light mb-3\">\r\n        <div className=\"card-header\">\r\n          <AppHeader count={ this.workersList.length }/>\r\n        </div>\r\n        <div className=\"card-body\">\r\n          <div className=\"top-panel d-flex\">\r\n            <SearchPanel />\r\n            <WorkerStatusFilter />\r\n          </div>\r\n          <RosterList workers={ this.workersList }/>\r\n          <AddWorkerBtn />\r\n        </div>\r\n\r\n        <AddWorkerForm />\r\n        <WorkerInfo />\r\n      </div>\r\n    );\r\n  }\r\n};\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\nimport App from './components/app';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n"],"sourceRoot":""}