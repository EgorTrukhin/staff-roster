{"version":3,"sources":["components/app-header/index.js","components/app-header/app-header.js","components/edit-n-del-buttons/index.js","components/edit-n-del-buttons/edit-n-del-buttons.js","components/roster-list-item/index.js","components/roster-list-item/roster-list-item.js","components/roster-list/index.js","components/roster-list/roster-list.js","components/search-panel/index.js","components/search-panel/search-panel.js","components/worker-status-filter/index.js","components/worker-status-filter/worker-status-filter.js","components/form-button/index.js","components/form-button/form-button.js","components/modal/index.js","components/modal/modal.js","services/local-storage-service.js","services/local-storage-init.js","components/add-worker-form/index.js","components/add-worker-form/add-worker-form.js","components/worker-info/index.js","components/worker-info/worker-info.js","components/app/index.js","components/app/app.js","index.js"],"names":["AppHeader","count","className","EditDelButtons","onEdit","onDelete","onClick","type","title","RosterListItem","mainInfo","job","onShowModal","fullName","name","first","last","middle","position","workDates","dismisDate","empDate","RosterList","workers","listItems","map","item","id","itemProps","SearchPanel","state","term","onTextChanged","event","onSearch","props","setState","target","value","placeholder","this","onChange","React","Component","WorkerStatusFilter","buttons","label","filter","onFilter","btns","FormButton","css","clazz","Modal","children","closeModal","body","footer","role","data-dismiss","aria-label","aria-hidden","SRStorage","checkInit","init","key","JSON","parse","localStorage","getItem","getStorageItem","getWorkersIds","val","setItem","stringify","new_ids","setItemToStorage","sort","worker","setId","deleteId","removeItem","positions","workersList","birthDay","sex","hasDriveLicense","NaN","ids","keys","find","every","forEach","pushItemToStorage","AddWorkerForm","_storage","showModalAddWorker","getPositions","pos","idx","htmlFor","defaultChecked","WorkerInfo","showModalWorkerInfo","currID","content","App","getWorkersData","search","showWorkerInfo","showAddForm","onDeleteWorker","deleteStorageItem","length","toLowerCase","indexOf","visibleWorkers","onEditWorker","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.96eb6a80.chunk.js","sourcesContent":["import AppHeader from './app-header';\r\n\r\nexport default AppHeader;\r\n","import React from 'react';\r\nimport './app-header.css';\r\n\r\nconst AppHeader = ( { count } ) => {\r\n  return (\r\n    <div className=\"d-flex app-header\">\r\n      <h1>Реестр сотрудников</h1>\r\n      <h2>Всего сотрудников: { count }</h2>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AppHeader;\r\n","import EditDelButtons from './edit-n-del-buttons';\r\n\r\nexport default EditDelButtons;\r\n","import React from 'react';\r\n\r\nimport './edit-n-del-buttons.css';\r\n\r\nconst EditDelButtons = ( { onEdit, onDelete } ) => {\r\n\r\n  return (\r\n    <div>\r\n      <button\r\n        onClick= { onEdit }\r\n        type=\"button\"\r\n        className=\"btn btn-outline-success btn-sm roster-list-item-btn\"\r\n        title=\"Редактировать\">\r\n          <i className=\"fa fa-pencil\"></i>\r\n      </button>\r\n      <button\r\n        onClick= { onDelete }\r\n        type=\"button\"\r\n        className=\"btn btn-outline-danger btn-sm roster-list-item-btn\"\r\n        title=\"Удалить\">\r\n          <i className=\"fa fa-trash-o\"></i>\r\n      </button>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default EditDelButtons;\r\n","import RosterListItem from './roster-list-item';\r\n\r\nexport default RosterListItem;\r\n","import React from 'react';\r\n\r\nimport './roster-list-item.css';\r\n\r\nimport EditDelButtons from '../edit-n-del-buttons';\r\n\r\nconst RosterListItem = ({ mainInfo, job, onEdit, onDelete, onShowModal }) => {\r\n  const fullName = `${mainInfo.name.first} ${mainInfo.name.last} ${mainInfo.name.middle}`;\r\n  const position = `Профессия: ${job.position}`;\r\n  const workDates = !job.dismisDate ? `Работает с ${job.empDate}` : `Работал с ${job.empDate} по ${job.dismisDate}`\r\n\r\n  return (\r\n    <div className=\"roster-list-item\">\r\n\r\n      <span\r\n        className=\"roster-list-item-clickzone\"\r\n        onClick={ onShowModal }\r\n      >\r\n        <span className=\"roster-list-item-name\">\r\n          { fullName }\r\n        </span>\r\n        <span className=\"roster-list-item-info\">\r\n          <p>{ position }</p>\r\n          <p>{ workDates }</p>\r\n        </span>\r\n      </span>\r\n\r\n      <EditDelButtons\r\n        onEdit={ onEdit }\r\n        onDelete={ onDelete }\r\n      />\r\n\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default RosterListItem;\r\n","import RosterList from './roster-list';\r\n\r\nexport default RosterList;\r\n","import React from 'react';\r\n\r\nimport RosterListItem from '../roster-list-item'\r\nimport './roster-list.css';\r\n\r\nconst RosterList = ( { workers, onEdit, onDelete, onShowModal } ) => {\r\n  const listItems = workers.map(\r\n    (item) => {\r\n      const { id, ...itemProps } = item\r\n      return (\r\n        <li key={ id } className=\"list-group-item\">\r\n          <RosterListItem\r\n            onEdit = { () => onEdit(id) }\r\n            onDelete = { () => onDelete(id) }\r\n            onShowModal = { () => onShowModal(id) }\r\n            { ...itemProps }\r\n          />\r\n        </li>\r\n      );\r\n    }\r\n  );\r\n\r\n  return (\r\n    <ul className=\"list-group roster-list\">\r\n      { listItems }\r\n    </ul>\r\n  );\r\n};\r\n\r\nexport default RosterList;\r\n","import SearchPanel from './search-panel';\r\n\r\nexport default SearchPanel;\r\n","import React from 'react';\r\nimport './search-panel.css';\r\n\r\nexport default class SearchPanel extends React.Component {\r\n  constructor () {\r\n    super();\r\n\r\n    this.state = {\r\n      term: ''\r\n    };\r\n\r\n    this.onTextChanged = (event) => {\r\n      const { onSearch } = this.props;\r\n\r\n      this.setState({\r\n        term: event.target.value\r\n      });\r\n\r\n      onSearch(event.target.value);\r\n    };\r\n  };\r\n\r\n  render () {\r\n    return (\r\n      <input\r\n        type=\"text\"\r\n        className=\"form-control search-input\"\r\n        placeholder=\"Введите имя для поиска...\"\r\n        value={ this.state.term }\r\n        onChange={ this.onTextChanged }\r\n      />\r\n    );\r\n  };\r\n};\r\n","import WorkerStatusFilter from './worker-status-filter';\r\n\r\nexport default WorkerStatusFilter;\r\n","import React from 'react';\r\n\r\nimport './worker-status-filter.css';\r\n\r\nexport default class WorkerStatusFilter extends React.Component {\r\n  constructor() {\r\n    super();\r\n\r\n    this.buttons = [\r\n      {name: 'all', label: 'Все'},\r\n      {name: 'stillWork', label: 'Работают'},\r\n      {name: 'dismissed', label: 'Уволены'}\r\n    ];\r\n  }\r\n\r\n  render() {\r\n    const { filter, onFilter } = this.props;\r\n    const btns = this.buttons.map(( {name, label} ) => {\r\n      const isActive = name == filter;\r\n      const className = isActive ? \"btn-info\" : \"btn-outline-info\";\r\n\r\n      return (\r\n        <button type=\"button\"\r\n                className={ `btn ${ className }` }\r\n                key={ name }\r\n                onClick={ () => onFilter(name) }>\r\n                { label }\r\n        </button>\r\n      );\r\n    });\r\n\r\n    return (\r\n      <div className=\"btn-group\">\r\n        { btns }\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import FormButton from './form-button';\r\n\r\nexport default FormButton;\r\n","import React from 'react';\r\n\r\nimport './form-button.css';\r\n\r\nconst FormButton = ({ label, type, css, onClick }) => {\r\n  const clazz = \"btn form-btn \" + css;\r\n  return (\r\n      <button\r\n        type={ type }\r\n        onClick={ onClick }\r\n        className={ clazz }>\r\n          { label }\r\n      </button>\r\n  );\r\n}\r\n\r\nexport default FormButton;\r\n","import Modal from './modal';\r\n\r\nexport default Modal;\r\n","import React from 'react';\r\n\r\nimport './modal.css';\r\n\r\nconst Modal = ( { clazz, children, closeModal } ) => {\r\n  const { title, body, footer } = children;\r\n  return (\r\n    <div className={ `modal modal-background ${ clazz }` }>\r\n      <div className=\"modal-dialog\" role=\"document\">\r\n        <div className=\"modal-content\">\r\n          <div className=\"modal-header\">\r\n            <h5 className=\"modal-title\">{ title }</h5>\r\n            <button onClick={ closeModal } type=\"button\" className=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\r\n              <span aria-hidden=\"true\">&times;</span>\r\n            </button>\r\n          </div>\r\n          <div className=\"modal-body\">\r\n            { body }\r\n          </div>\r\n          <div className=\"modal-footer\">\r\n            { footer }\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Modal;\r\n","import SRStorageInit from './local-storage-init';\r\n\r\nexport default class SRStorage extends SRStorageInit {\r\n  constructor() {\r\n    super();\r\n    \r\n    if (!this.checkInit()) {\r\n      this.init();\r\n    }\r\n  }\r\n\r\n  // get\r\n  getStorageItem(key) {\r\n    return JSON.parse(localStorage.getItem(key))\r\n  }\r\n\r\n  getWorkersIds() {\r\n    return this.getStorageItem(\"ids\");\r\n  }\r\n\r\n  getWorkersData() {\r\n    return this.getWorkersIds().map((id) => {\r\n      return this.getStorageItem(id);\r\n    });\r\n  }\r\n\r\n  getPositions() {\r\n    return this.getStorageItem(\"positions\");\r\n  }\r\n\r\n  // set\r\n  setItemToStorage(key, val) {\r\n    localStorage.setItem(key, JSON.stringify(val));\r\n  }\r\n\r\n  setId(id) {\r\n    const new_ids = [ ...this.getWorkersIds(), id ];\r\n    this.setItemToStorage(\"ids\", new_ids.sort())\r\n  }\r\n\r\n  setWorker(worker) {\r\n    this.setId(worker.id);\r\n    this.setItemToStorage(worker.id, worker);\r\n  }\r\n\r\n  // del\r\n  deleteId(id) {\r\n    const new_ids = this.getWorkersIds().filter(item => item != id);\r\n    this.setItemToStorage(\"ids\", new_ids.sort());\r\n  }\r\n\r\n  deleteStorageItem(id){\r\n    this.deleteId(id);\r\n    localStorage.removeItem(id);\r\n  }\r\n}\r\n","export default class SRStorageInit {\r\n  positions = [\r\n    \"Junior Frontend\",\r\n    \"Middle Frontend\",\r\n    \"Senior Frontend\",\r\n    \"Junior Backend\",\r\n    \"Middle Backend\",\r\n    \"Senior Backend\",\r\n    \"Fullstack\",\r\n    \"HR-Manager\"\r\n  ];\r\n\r\n  workersList = [\r\n    {\r\n      id: \"000\",\r\n      mainInfo: {\r\n        name: {\r\n          first: \"Иванов\",\r\n          last: \"Иван\",\r\n          middle: \"Иваныч\"\r\n        },\r\n        birthDay: \"04.11.1982\",\r\n        sex: \"male\",\r\n        hasDriveLicense: false\r\n      },\r\n      job:{\r\n        position: \"Frontend\",\r\n        empDate: \"12.02.2006\",\r\n        dismisDate: NaN\r\n      }\r\n    },\r\n    {\r\n      id: \"001\",\r\n      mainInfo: {\r\n        name: {\r\n          first: \"Петров\",\r\n          last: \"Петр\",\r\n          middle: \"Петрович\"\r\n        },\r\n        birthDay: \"17.04.1976\",\r\n        sex: \"male\",\r\n        hasDriveLicense: true\r\n      },\r\n      job:{\r\n        position: \"Backend\",\r\n        empDate: \"19.06.2004\",\r\n        dismisDate: \"06.10.2012\"\r\n      }\r\n    },\r\n    {\r\n      id: \"002\",\r\n      mainInfo: {\r\n        name: {\r\n          first: \"Трухин\",\r\n          last: \"Егор\",\r\n          middle: \"Юрьевич\"\r\n        },\r\n        birthDay: \"20.06.2000\",\r\n        sex: \"male\",\r\n        hasDriveLicense: false\r\n      },\r\n      job:{\r\n        position: \"Junior Frontend\",\r\n        empDate: \"08.10.2020\",\r\n        dismisDate: NaN\r\n      }\r\n    }\r\n  ];\r\n\r\n  ids = this.workersList.map(worker => {\r\n    return worker.id;\r\n  });\r\n\r\n  keys = [\"ids\", ...this.ids, \"positions\"];\r\n\r\n  pushItemToStorage(key, val) {\r\n    localStorage.setItem(key, JSON.stringify(val));\r\n  }\r\n\r\n  getWorkerWithoutId(id) {\r\n    const { mainInfo, job } = this.workersList.find(item => item.id === id);\r\n    return { mainInfo, job };\r\n  }\r\n\r\n  checkInit() {\r\n    return this.keys.every((key) => {\r\n      return (localStorage.getItem(key) != null);\r\n    });\r\n  }\r\n\r\n  init() {\r\n    this.keys.forEach((key) => {\r\n      if (!localStorage.getItem(key)) {\r\n        switch (key) {\r\n          case \"ids\":\r\n            this.pushItemToStorage(key, this.ids);\r\n            break;\r\n          case \"positions\":\r\n            this.pushItemToStorage(key, this.positions);\r\n            break;\r\n          default:\r\n            this.pushItemToStorage(key,\r\n              this.workersList.find(item => item.id === key));\r\n        }\r\n      }\r\n    });\r\n  }\r\n}\r\n","import AddWorkerForm from './add-worker-form';\r\n\r\nexport default AddWorkerForm;\r\n","import React from 'react';\r\n\r\nimport './add-worker-form.css';\r\n\r\nimport Modal from '../modal';\r\nimport FormButton from '../form-button';\r\n\r\nimport SRStorage from '../../services/local-storage-service';\r\n\r\nexport default class AddWorkerForm extends React.Component {\r\n  constructor() {\r\n    super();\r\n\r\n    this._storage = new SRStorage();\r\n  };\r\n\r\n  render() {\r\n    const { showModalAddWorker, closeModal } = this.props;\r\n\r\n    const positions = this._storage\r\n        .getPositions()\r\n        .map((pos, idx) => {\r\n          return (\r\n            <option key={ idx }>{ pos }</option>\r\n          )\r\n        });\r\n\r\n    const children = {\r\n      title: \"Добавить нового сотрудника\",\r\n      body: (\r\n        <>\r\n        <div className=\"form-group\">\r\n          <label>Данные ФИО</label>\r\n          <div className=\"form-group\">\r\n            <input type=\"text\" className=\"form-control\" placeholder=\"Фамилия\" />\r\n            <input type=\"text\" className=\"form-control\" placeholder=\"Имя\" />\r\n            <input type=\"text\" className=\"form-control\" placeholder=\"Отчество\" />\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"form-group\">\r\n          <label htmlFor=\"job-select\">Должность</label>\r\n          <select className=\"custom-select\" id=\"job-select\">\r\n            { positions }\r\n          </select>\r\n        </div>\r\n\r\n        <div className=\"form-group\">\r\n          <legend>Пол</legend>\r\n          <div className=\"custom-control custom-checkbox\">\r\n            <input type=\"radio\" className=\"custom-control-input\" name=\"optionsSex\" id=\"optionMale\" value=\"male\" defaultChecked/>\r\n            <label className=\"custom-control-label\" htmlFor=\"optionMale\">Мужской</label>\r\n          </div>\r\n          <div className=\"custom-control custom-checkbox\">\r\n            <input type=\"radio\" className=\"custom-control-input\" name=\"optionsSex\" id=\"optionFemale\" value=\"female\"/>\r\n            <label className=\"custom-control-label\" htmlFor=\"optionFemale\">Женский</label>\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"form-group\">\r\n          <legend>Наличие прав</legend>\r\n          <div className=\"custom-control custom-checkbox\">\r\n            <input type=\"checkbox\" className=\"custom-control-input\" id=\"noLic\" defaultChecked/>\r\n            <label className=\"custom-control-label\" htmlFor=\"noLic\">Нет</label>\r\n          </div>\r\n          <div className=\"custom-control custom-checkbox\">\r\n            <input type=\"checkbox\" className=\"custom-control-input\" id=\"cat-A\"/>\r\n            <label className=\"custom-control-label\" htmlFor=\"cat-A\">Категория А</label>\r\n          </div>\r\n          <div className=\"custom-control custom-checkbox\">\r\n            <input type=\"checkbox\" className=\"custom-control-input\" id=\"cat-B\"/>\r\n            <label className=\"custom-control-label\" htmlFor=\"cat-B\">Категория В</label>\r\n          </div>\r\n          <div className=\"custom-control custom-checkbox\">\r\n            <input type=\"checkbox\" className=\"custom-control-input\" id=\"cat-C\"/>\r\n            <label className=\"custom-control-label\" htmlFor=\"cat-C\">Категория С</label>\r\n          </div>\r\n        </div>\r\n        </>\r\n      ),\r\n      footer: (\r\n        <>\r\n        <FormButton\r\n          label=\"Добавить\"\r\n          type=\"submit\"\r\n          css=\"btn-sm btn-primary\"\r\n        />\r\n        <FormButton\r\n          label=\"Отменить\"\r\n          type=\"button\"\r\n          css=\"btn-sm btn-outline-secondary\"\r\n          onClick={ this.props.closeModal }\r\n        />\r\n        </>\r\n      )\r\n    }\r\n\r\n    return (\r\n      <>\r\n      {\r\n        showModalAddWorker ? <Modal children={ children } closeModal={ closeModal } clazz=\"add-worker-form\" /> : null\r\n      }\r\n      </>\r\n    );\r\n  }\r\n}\r\n","import WorkerInfo from './worker-info.js';\r\n\r\nexport default WorkerInfo;\r\n","import React from 'react';\r\nimport './worker-info.css';\r\n\r\nimport Modal from '../modal';\r\nimport FormButton from '../form-button';\r\nimport EditDelButtons from '../edit-n-del-buttons';\r\n\r\nimport SRStorage from '../../services/local-storage-service';\r\n\r\nconst WorkerInfo = ( { showModalWorkerInfo, closeModal, currID } ) => {\r\n  const _storage = new SRStorage();\r\n  let content = null;\r\n\r\n  if (showModalWorkerInfo) {\r\n    const { mainInfo, job } = _storage.getStorageItem(currID);;\r\n    const name = `${mainInfo.name.first} ${mainInfo.name.last} ${mainInfo.name.middle}`\r\n\r\n    content = (\r\n      <p>\r\n        ФИО: { name }\r\n        Пол: { mainInfo.sex === 'male' ? \"Мужской\" : \"Женский\" }\r\n        Дата рождения: { mainInfo.birthDay }\r\n        Водительские права: { mainInfo.hasDriveLicense ? \"Есть\" : \"Нет\" }\r\n        Должность: { job.position }\r\n        Дата приема: { job.empDate }\r\n        Дата увольнения: { job.dismisDate ? job.dismisDate : \"-\" }\r\n      </p>\r\n    );\r\n  }\r\n\r\n  const children = {\r\n    title: \"Информация о сотруднике\",\r\n    body: content,\r\n    footer: (\r\n      <>\r\n        <EditDelButtons />\r\n        <div>\r\n          <FormButton\r\n            label=\"Закрыть\"\r\n            type=\"button\"\r\n            css=\"btn-secondary btn-sm\"\r\n            onClick={ closeModal }\r\n          />\r\n        </div>\r\n      </>\r\n    )\r\n  }\r\n  return (\r\n    <>\r\n    {\r\n      showModalWorkerInfo ? <Modal children={ children } closeModal={ closeModal } clazz=\"worker-info\" /> : null\r\n    }\r\n    </>\r\n  );\r\n};\r\n\r\nexport default WorkerInfo;\r\n","import App from './app.js';\r\n\r\nexport default App;\r\n","import React from 'react';\r\n\r\nimport './app.css';\r\n\r\nimport AppHeader from '../app-header';\r\nimport RosterList from '../roster-list';\r\nimport SearchPanel from '../search-panel';\r\nimport WorkerStatusFilter from '../worker-status-filter';\r\n\r\nimport FormButton from '../form-button';\r\nimport AddWorkerForm from '../add-worker-form';\r\nimport WorkerInfo from '../worker-info';\r\n\r\nimport SRStorage from '../../services/local-storage-service';\r\n\r\nexport default class App extends React.Component {\r\n  constructor() {\r\n    super();\r\n\r\n    this._storage = new SRStorage();\r\n\r\n    this.state = {\r\n      workersList: this._storage.getWorkersData(),\r\n      search: '',\r\n      filter: 'all',\r\n      currID: null,\r\n      showModalWorkerInfo: false,\r\n      showModalAddWorker: false\r\n    }\r\n\r\n    this.showWorkerInfo = (id) => {\r\n      this.setState(( { showModalWorkerInfo } ) => {\r\n        return {\r\n          currID: id,\r\n          showModalWorkerInfo: !showModalWorkerInfo\r\n        };\r\n      });\r\n    }\r\n\r\n    this.showAddForm = () => {\r\n      this.setState(( { showModalAddWorker } ) => {\r\n        return {\r\n          showModalAddWorker: !showModalAddWorker\r\n        };\r\n      });\r\n    }\r\n\r\n    this.onDeleteWorker = (id) => {\r\n      this.setState((state) => {\r\n        this._storage.deleteStorageItem(id);\r\n        const workersList = this._storage.getWorkersData();\r\n\r\n        return { workersList };\r\n      });\r\n    };\r\n\r\n    this.onSearch = (search) => {\r\n      this.setState({ search });\r\n    };\r\n\r\n    this.onFilter = (filter) => {\r\n      this.setState({ filter });\r\n    };\r\n\r\n    this.search = (workersList, search) => {\r\n      if (search.length == 0) {\r\n        return workersList;\r\n      }\r\n\r\n      return workersList.filter((worker) =>\r\n        worker.mainInfo.name.first.toLowerCase().indexOf(search.toLowerCase()) > -1 ||\r\n        worker.mainInfo.name.last.toLowerCase().indexOf(search.toLowerCase()) > -1 ||\r\n        worker.mainInfo.name.middle.toLowerCase().indexOf(search.toLowerCase()) > -1\r\n      );\r\n    }\r\n\r\n    this.filter = (workersList, filter) => {\r\n      if (filter == 'all') {\r\n        return workersList;\r\n      } else if (filter == 'stillWork') {\r\n        return workersList.filter((worker) => worker.job.dismisDate === null)\r\n      } else {\r\n        return workersList.filter((worker) => worker.job.dismisDate != null)\r\n      }\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { workersList, search, filter } = this.state;\r\n    const visibleWorkers = this.filter(this.search(workersList, search), filter)\r\n\r\n    return (\r\n      <div className=\"staff-roster-app card border-light mb-3\">\r\n        <div className=\"card-header\">\r\n          <AppHeader count={ workersList.length }/>\r\n        </div>\r\n        <div className=\"card-body\">\r\n          <div className=\"top-panel d-flex\">\r\n            <SearchPanel onSearch={ this.onSearch }/>\r\n            <WorkerStatusFilter\r\n              filter={ filter }\r\n              onFilter={ this.onFilter }\r\n            />\r\n          </div>\r\n          <RosterList\r\n            workers={ visibleWorkers }\r\n            onEdit={ this.onEditWorker }\r\n            onDelete={ this.onDeleteWorker }\r\n            onShowModal={ this.showWorkerInfo }\r\n            />\r\n          <FormButton\r\n            label=\"Добавить сотрудника\"\r\n            type=\"button\"\r\n            css=\"btn-primary float-right\"\r\n            onClick={ this.showAddForm }\r\n          />\r\n        </div>\r\n\r\n        <AddWorkerForm\r\n          showModalAddWorker={ this.state.showModalAddWorker }\r\n          closeModal={ this.showAddForm }\r\n        />\r\n        <WorkerInfo\r\n          showModalWorkerInfo={ this.state.showModalWorkerInfo }\r\n          closeModal={ this.showWorkerInfo }\r\n          currID={ this.state.currID }\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n};\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\nimport App from './components/app';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n"],"sourceRoot":""}