{"version":3,"sources":["components/app-header/index.js","components/app-header/app-header.js","components/edit-n-del-buttons/index.js","components/edit-n-del-buttons/edit-n-del-buttons.js","components/roster-list-item/index.js","components/roster-list-item/roster-list-item.js","components/roster-list/index.js","components/roster-list/roster-list.js","components/search-panel/index.js","components/search-panel/search-panel.js","components/worker-status-filter/index.js","components/worker-status-filter/worker-status-filter.js","components/form-button/index.js","components/form-button/form-button.js","components/modal/index.js","components/modal/modal.js","services/local-storage-init.js","services/local-storage-service.js","components/worker-form/worker-form.js","components/worker-form/index.js","components/worker-info/index.js","components/worker-info/worker-info.js","components/app/app.js","components/app/index.js","index.js"],"names":["AppHeader","count","className","EditDelButtons","onEdit","onDelete","onClick","type","title","RosterListItem","props","onShowModal","fullName","lastName","firstName","middleName","position","workDates","dismisDate","empDate","RosterList","workers","listItems","map","item","id","itemProps","SearchPanel","state","term","onTextChanged","event","onSearch","setState","target","value","placeholder","this","onChange","React","Component","WorkerStatusFilter","buttons","name","label","filter","onFilter","btns","FormButton","css","clazz","Modal","children","closeModal","body","footer","role","data-dismiss","aria-label","aria-hidden","positions","workersList","birthDay","sex","hasDriveLicense","ids","worker","keys","getStorageItem","key","JSON","parse","localStorage","getItem","pushItemToStorage","val","setItem","stringify","SRStorage","checkInit","init","getWorkersIds","new_ids","setItemToStorage","Set","sort","setId","deleteId","removeItem","checker","every","forEach","find","_storage","getNewId","generateNewId","length","nameRegex","RegExp","WorkerForm","handleSubmit","preventDefault","console","log","formErrors","Object","values","err","some","prop","formValid","setWorker","getPositions","editing","addItem","handleClose","handleChange","test","checked","currID","showModalAddWorker","pos","idx","noValidate","htmlFor","addForm","onSubmit","WorkerInfo","showModalWorkerInfo","content","App","getWorkersData","search","showModalEditWorker","showWorkerInfo","showAddForm","onEditWorker","onAdd","onDeleteWorker","deleteStorageItem","toLowerCase","indexOf","visibleWorkers","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.d9a81604.chunk.js","sourcesContent":["import AppHeader from './app-header';\r\n\r\nexport default AppHeader;\r\n","import React from 'react';\r\nimport './app-header.css';\r\n\r\n// ШАПКА ПРИЛОЖЕНИЯ\r\nconst AppHeader = ( { count } ) => {\r\n  return (\r\n    <div className=\"d-flex app-header\">\r\n      <h1>Реестр сотрудников</h1>\r\n      <h2>Всего сотрудников: { count }</h2>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AppHeader;\r\n","import EditDelButtons from './edit-n-del-buttons';\r\n\r\nexport default EditDelButtons;\r\n","import React from 'react';\r\n\r\nimport './edit-n-del-buttons.css';\r\n\r\n// КНОПКИ РЕДАКТИРОВАНИЯ И УДАЛЕНИЯ СОТРУДНИКА\r\nconst EditDelButtons = ( { onEdit, onDelete } ) => {\r\n\r\n  return (\r\n    <div>\r\n      <button\r\n        onClick= { onEdit }\r\n        type=\"button\"\r\n        className=\"btn btn-outline-success btn-sm roster-list-item-btn\"\r\n        title=\"Редактировать\">\r\n          <i className=\"fa fa-pencil\"></i>\r\n      </button>\r\n      <button\r\n        onClick= { onDelete }\r\n        type=\"button\"\r\n        className=\"btn btn-outline-danger btn-sm roster-list-item-btn\"\r\n        title=\"Удалить\">\r\n          <i className=\"fa fa-trash-o\"></i>\r\n      </button>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default EditDelButtons;\r\n","import RosterListItem from './roster-list-item';\r\n\r\nexport default RosterListItem;\r\n","import React from 'react';\r\n\r\nimport './roster-list-item.css';\r\nimport EditDelButtons from '../edit-n-del-buttons';\r\n\r\n// ЭЛЕМЕНТ СПИСКА СОТРУДНИКОВ ПРИЛОЖЕНИЯ\r\nconst RosterListItem = ({ props, onEdit, onDelete, onShowModal }) => {\r\n  const fullName = `${props.lastName} ${props.firstName} ${props.middleName}`;\r\n  const position = `Должность: ${props.position}`;\r\n  const workDates = !props.dismisDate ?\r\n  `Работает с ${props.empDate}` : `Работал с ${props.empDate} по ${props.dismisDate}`\r\n\r\n  return (\r\n    <div className=\"roster-list-item\">\r\n\r\n      <span\r\n        className=\"roster-list-item-clickzone\"\r\n        onClick={ onShowModal }\r\n      >\r\n        <span className=\"roster-list-item-name\">\r\n          { fullName }\r\n        </span>\r\n        <span className=\"roster-list-item-info\">\r\n          <p>{ position }</p>\r\n          <p>{ workDates }</p>\r\n        </span>\r\n      </span>\r\n\r\n      <EditDelButtons\r\n        onEdit={ onEdit }\r\n        onDelete={ onDelete }\r\n      />\r\n\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default RosterListItem;\r\n","import RosterList from './roster-list';\r\n\r\nexport default RosterList;\r\n","import React from 'react';\r\n\r\nimport RosterListItem from '../roster-list-item'\r\nimport './roster-list.css';\r\n\r\n// СПИСОК СОТРУДНИКОВ\r\nconst RosterList = ( { workers, onEdit, onDelete, onShowModal } ) => {\r\n  const listItems = workers.map(\r\n    (item) => {\r\n      const { id, ...itemProps } = item\r\n      return (\r\n        <li key={ id } className=\"list-group-item\">\r\n          <RosterListItem\r\n            onEdit = { () => onEdit(id) }\r\n            onDelete = { () => onDelete(id) }\r\n            onShowModal = { () => onShowModal(id) }\r\n            props={ itemProps }\r\n          />\r\n        </li>\r\n      );\r\n    }\r\n  );\r\n\r\n  return (\r\n    <ul className=\"list-group roster-list\">\r\n      { listItems }\r\n    </ul>\r\n  );\r\n};\r\n\r\nexport default RosterList;\r\n","import SearchPanel from './search-panel';\r\n\r\nexport default SearchPanel;\r\n","import React from 'react';\r\nimport './search-panel.css';\r\n\r\n// ПОИСКОВАЯ СТРОКА\r\nexport default class SearchPanel extends React.Component {\r\n  constructor () {\r\n    super();\r\n\r\n    this.state = {\r\n      term: ''\r\n    };\r\n\r\n    this.onTextChanged = (event) => {\r\n      const { onSearch } = this.props;\r\n\r\n      this.setState({\r\n        term: event.target.value\r\n      });\r\n\r\n      onSearch(event.target.value);\r\n    };\r\n  };\r\n\r\n  render () {\r\n    return (\r\n      <input\r\n        type=\"text\"\r\n        className=\"form-control search-input\"\r\n        placeholder=\"Введите имя для поиска...\"\r\n        value={ this.state.term }\r\n        onChange={ this.onTextChanged }\r\n      />\r\n    );\r\n  };\r\n};\r\n","import WorkerStatusFilter from './worker-status-filter';\r\n\r\nexport default WorkerStatusFilter;\r\n","import React from 'react';\r\n\r\nimport './worker-status-filter.css';\r\n\r\nexport default class WorkerStatusFilter extends React.Component {\r\n  constructor() {\r\n    super();\r\n\r\n    this.buttons = [\r\n      {name: 'all', label: 'Все'},\r\n      {name: 'stillWork', label: 'Работают'},\r\n      {name: 'dismissed', label: 'Уволены'}\r\n    ];\r\n  }\r\n\r\n  render() {\r\n    const { filter, onFilter } = this.props;\r\n    const btns = this.buttons.map(( {name, label} ) => {\r\n      const isActive = name == filter;\r\n      const className = isActive ? \"btn-info\" : \"btn-outline-info\";\r\n\r\n      return (\r\n        <button type=\"button\"\r\n                className={ `btn ${ className }` }\r\n                key={ name }\r\n                onClick={ () => onFilter(name) }>\r\n                { label }\r\n        </button>\r\n      );\r\n    });\r\n\r\n    return (\r\n      <div className=\"btn-group\">\r\n        { btns }\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import FormButton from './form-button';\r\n\r\nexport default FormButton;\r\n","import React from 'react';\r\n\r\nimport './form-button.css';\r\n\r\n// КНОПКА ДЛЯ РАБОТЫ С ФОРМАМИ СО СВОИМИ НАЗВАНИЕМ, СТИЛЯМИ, ДЕЙСТВИЕМ\r\nconst FormButton = ({ label, type, css, onClick }) => {\r\n  const clazz = \"btn form-btn \" + css;\r\n  return (\r\n      <button\r\n        type={ type }\r\n        onClick={ onClick }\r\n        className={ clazz }>\r\n          { label }\r\n      </button>\r\n  );\r\n}\r\n\r\nexport default FormButton;\r\n","import Modal from './modal';\r\n\r\nexport default Modal;\r\n","import React from 'react';\r\n\r\nimport './modal.css';\r\n\r\n// МОДАЛЬНОЕ ОКНО\r\n// (классы css, дочерние элементы для вставки в модалку, функция закрытия окна)\r\nconst Modal = ( { clazz, children, closeModal } ) => {\r\n  const { title, body, footer } = children;\r\n  return (\r\n    <div className={ `modal modal-background ${ clazz }` }>\r\n      <div className=\"modal-dialog\" role=\"document\">\r\n        <div className=\"modal-content\">\r\n          <div className=\"modal-header\">\r\n            <h5 className=\"modal-title\">{ title }</h5>\r\n            <button onClick={ closeModal } type=\"button\" className=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\r\n              <span aria-hidden=\"true\">&times;</span>\r\n            </button>\r\n          </div>\r\n          <div className=\"modal-body\">\r\n            { body }\r\n          </div>\r\n          <div className=\"modal-footer\">\r\n            { footer }\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Modal;\r\n","// ИНИЦИАЛИЗАЦИЯ ХРАНИЛИЩА\r\n\r\n// ДОЛЖНОСТИ\r\n const positions = [\r\n  \"Junior Frontend\",\r\n  \"Middle Frontend\",\r\n  \"Senior Frontend\",\r\n  \"Junior Backend\",\r\n  \"Middle Backend\",\r\n  \"Senior Backend\",\r\n  \"Fullstack\",\r\n  \"HR-Manager\"\r\n];\r\n\r\n// ИЗНАЧАЛЬНЫЙ СПИСОК СОТРУДНИКОВ ДЛЯ ИНИЦИАЛИЗАЦИИ ХРАНИЛИЩА\r\nconst workersList = [\r\n  {\r\n    id: 100,\r\n    lastName: \"Иванов\",\r\n    firstName: \"Иван\",\r\n    middleName: \"Иваныч\",\r\n    birthDay: \"1982-04-11\",\r\n    sex: \"male\",\r\n    hasDriveLicense: false,\r\n\r\n    position: \"Senior Frontend\",\r\n    empDate: \"2006-12-02\",\r\n    dismisDate: \"\"\r\n  },\r\n  {\r\n    id: 101,\r\n    lastName: \"Петров\",\r\n    firstName: \"Петр\",\r\n    middleName: \"Петрович\",\r\n    birthDay: \"1976-04-17\",\r\n    sex: \"male\",\r\n    hasDriveLicense: true,\r\n\r\n    position: \"Senior Backend\",\r\n    empDate: \"2004-06-19\",\r\n    dismisDate: \"2012-06-10\"\r\n\r\n  },\r\n  {\r\n    id: 102,\r\n    lastName: \"Трухин\",\r\n    firstName: \"Егор\",\r\n    middleName: \"Юрьевич\",\r\n    birthDay: \"2000-06-20\",\r\n    sex: \"male\",\r\n    hasDriveLicense: false,\r\n\r\n    position: \"Junior Frontend\",\r\n    empDate: \"2020-08-10\",\r\n    dismisDate: \"\"\r\n\r\n  }\r\n];\r\n\r\n// СПИСОК ID\r\nconst ids = workersList.map(worker => {\r\n  return worker.id;\r\n});\r\n\r\n// СПИСОК КЛЮЧЕЙ ДЛЯ ЗАПОЛНЕНИЯ localStorage\r\nconst keys = [\"ids\", ...ids, \"positions\"];\r\n\r\n// ПОЛУЧИТЬ ЭЛЕМЕНТ\r\nconst getStorageItem = (key) => {\r\n  return JSON.parse(localStorage.getItem(key));\r\n}\r\n\r\n// ДОБАВИТЬ НОВЫЙ ЭЛЕМЕНТ\r\nconst pushItemToStorage = (key, val) => {\r\n  localStorage.setItem(key, JSON.stringify(val));\r\n}\r\n\r\n// ИНИЦИАЛИЗАЦИЯ\r\nexport default class SRStorageInit {\r\n  checkInit() {\r\n    const checker = getStorageItem(\"ids\");\r\n    if (checker != null) {\r\n      return checker.every((id) => {\r\n        return (getStorageItem(id) != null);\r\n      });\r\n    }\r\n    else {\r\n      return keys.every((key) => {\r\n        return (getStorageItem(key) != null);\r\n      });\r\n    }\r\n  }\r\n\r\n  init() {\r\n    keys.forEach((key) => {\r\n      if (!localStorage.getItem(key)) {\r\n        switch (key) {\r\n          case \"ids\":\r\n            pushItemToStorage(key, ids);\r\n            break;\r\n          case \"positions\":\r\n            pushItemToStorage(key, positions);\r\n            break;\r\n          default:\r\n            pushItemToStorage(key,\r\n              workersList.find(item => item.id === key));\r\n        }\r\n      }\r\n    });\r\n  }\r\n}\r\n","// РАБОТА С localStorage\r\n\r\nimport SRStorageInit from './local-storage-init';\r\n\r\nexport default class SRStorage extends SRStorageInit {\r\n  constructor() {\r\n    super();\r\n\r\n    // ПРОВЕРКА ИНИЦИАЛИЗАЦИИ ХРАНИЛИЩА\r\n    if (!this.checkInit()) {\r\n      this.init();\r\n    }\r\n  }\r\n\r\n  // ГЕНАРАЦИЯ НОВОГО ID\r\n  generateNewId(id) {\r\n    return id + 1;\r\n  }\r\n\r\n  // get\r\n  // ПОЛУЧИТЬ ЭЛЕМЕНТ localStorage\r\n  getStorageItem(key) {\r\n    return JSON.parse(localStorage.getItem(key))\r\n  }\r\n\r\n  // ПОЛУЧИТЬ ВСЕ ID\r\n  getWorkersIds() {\r\n    return this.getStorageItem(\"ids\");\r\n  }\r\n\r\n  // ПОЛУЧИТЬ ВСЕХ СОТРУДНИКОВ\r\n  getWorkersData() {\r\n    return this.getWorkersIds().map((id) => {\r\n      return this.getStorageItem(id);\r\n    });\r\n  }\r\n\r\n  // ПОЛУЧИТЬ ВСЕ ДОЛЖНОСТИ\r\n  getPositions() {\r\n    return this.getStorageItem(\"positions\");\r\n  }\r\n\r\n  // set\r\n  // ДОБАВИТЬ НОВЫЙ ЭЛЕМЕНТ В localStorage\r\n  setItemToStorage(key, val) {\r\n    localStorage.setItem(key, JSON.stringify(val));\r\n  }\r\n\r\n  // ДОБАВИТЬ НОВЫЙ ID\r\n  setId(id) {\r\n    const new_ids = [ ...this.getWorkersIds(), id ];\r\n    this.setItemToStorage(\"ids\", [...new Set(new_ids)].sort())\r\n  }\r\n\r\n  // ДОБАВИТЬ НОВОГО СОТРУДНИКА\r\n  setWorker(worker) {\r\n    this.setId(worker.id);\r\n    this.setItemToStorage(worker.id, worker);\r\n  }\r\n\r\n  // del\r\n  // УДАЛИТЬ ID ИЗ СПИСКА ID\r\n  deleteId(id) {\r\n    const new_ids = this.getWorkersIds().filter(item => item != id);\r\n    this.setItemToStorage(\"ids\", new_ids.sort());\r\n  }\r\n\r\n  // УДАЛИТЬ ЭЛЕМЕНТ ИЗ localStorage\r\n  deleteStorageItem(id){\r\n    this.deleteId(id);\r\n    localStorage.removeItem(id);\r\n  }\r\n}\r\n","// ФОРМА ДЛЯ РЕДАКТИРОВАНИЯ ИЛИ ДОБАВЛЕНИЯ СОТРУДНИКА\r\n\r\nimport React from 'react';\r\n\r\nimport './worker-form.css';\r\n\r\nimport Modal from '../modal';\r\nimport FormButton from '../form-button';\r\n\r\nimport SRStorage from '../../services/local-storage-service';\r\nconst _storage = new SRStorage();\r\n\r\n// проверка валидности формы перед отправкой\r\nconst formValid = ({ formErrors, ...props }) => {\r\n  return Object.values(formErrors).every(err => err.length < 1)\r\n        && !Object.values(props).some(prop => prop === null);\r\n}\r\n\r\n// получение нового id для добавления сотрудника в хранилище\r\nconst getNewId = () => {\r\n  const ids = _storage.getWorkersIds();\r\n  return _storage.generateNewId(ids[ids.length - 1]);\r\n}\r\n\r\n// регулярное выражения для проверки ввода ФИО\r\nconst nameRegex = RegExp(/^[а-яА-Я]+[^a-zA-Z0-9]$/);\r\n\r\nexport default class WorkerForm extends React.Component {\r\n  constructor() {\r\n    super();\r\n\r\n    this.state = {\r\n      id: getNewId(),\r\n      firstName: null,\r\n      lastName: null,\r\n      middleName: null,\r\n      birthDay: null,\r\n      sex: \"male\",\r\n      hasDriveLicense: false,\r\n      position: _storage.getPositions()[0],\r\n      empDate: null,\r\n      dismisDate: \"\",\r\n      formErrors: {\r\n        firstName: \"\",\r\n        lastName: \"\",\r\n        middleName: \"\"\r\n      },\r\n      formValid: true,\r\n      editing: false\r\n    }\r\n  };\r\n\r\n  // приготовление перед отправкой формы\r\n  handleSubmit = (event) => {\r\n    event.preventDefault();\r\n    console.log(this.state);\r\n    // если форма валидна\r\n    if(formValid(this.state)) {\r\n      const worker = {\r\n        id: this.state.id,\r\n        lastName: this.state.lastName,\r\n        firstName: this.state.firstName,\r\n        middleName: this.state.middleName,\r\n        birthDay: this.state.birthDay,\r\n        sex: this.state.sex,\r\n\r\n        hasDriveLicense: this.state.hasDriveLicense,\r\n        position: this.state.position,\r\n        empDate: this.state.empDate,\r\n        dismisDate: this.state.dismisDate\r\n      }\r\n\r\n      _storage.setWorker(worker);\r\n\r\n      this.setState(() => {\r\n        return {\r\n          id: getNewId(),\r\n          firstName: null,\r\n          lastName: null,\r\n          middleName: null,\r\n          birthDay: null,\r\n          sex: \"male\",\r\n          hasDriveLicense: false,\r\n          position: _storage.getPositions()[0],\r\n          empDate: null,\r\n          dismisDate: \"\",\r\n          formErrors: {\r\n            firstName: \"\",\r\n            lastName: \"\",\r\n            middleName: \"\",\r\n            dismisDate: \"\"\r\n          },\r\n          formValid: true,\r\n          editing: false\r\n        }\r\n      })\r\n\r\n      this.props.closeModal();\r\n      this.props.addItem();\r\n    }\r\n    // если форма невалидна\r\n    else {\r\n      this.setState(() => {\r\n        return {\r\n          formValid: false\r\n        }\r\n      })\r\n    }\r\n  }\r\n\r\n  // при закрытии формы стирать данные из стейта\r\n  handleClose = (event) => {\r\n    this.setState(() => {\r\n      return {\r\n        editing: false\r\n      }\r\n    })\r\n    this.props.closeModal();\r\n  }\r\n\r\n  // проверка и заполнение стейта при вводе данных в форму\r\n  handleChange = (event) => {\r\n    let { name, value } = event.target;\r\n    let formErrors = this.state.formErrors;\r\n    console.log(this.state);\r\n    switch (name) {\r\n      case \"firstName\":\r\n        formErrors.firstName = nameRegex.test(value) || value.length === 0 ? \"\" : \"Неверный синтаксис!\";\r\n        break;\r\n      case \"lastName\":\r\n        formErrors.lastName = nameRegex.test(value) || value.length === 0 ? \"\" : \"Неверный синтаксис!\";\r\n        break;\r\n      case \"middleName\":\r\n        formErrors.middleName = nameRegex.test(value) || value.length === 0 ? \"\" : \"Неверный синтаксис!\";\r\n        break;\r\n      case \"empDate\":\r\n        formErrors.dismisDate = value > this.state.empDate || value.length === 0 ? \"\" : \"Дата увольнения должная быть позже даты приема\";\r\n        break;\r\n      case \"dismisDate\":\r\n        formErrors.dismisDate = value > this.state.empDate || value.length === 0 ? \"\" : \"Дата увольнения должная быть позже даты приема\";\r\n        break;\r\n      case \"hasDriveLicense\":\r\n        value = event.target.checked;\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n\r\n    this.setState({ formErrors, [name]: value })\r\n  }\r\n\r\n  // заполнение формы имеющимися данными при редактировании сотрудника\r\n  componentDidUpdate() {\r\n    const { editing } = this.state;\r\n    if (typeof this.props.currID === \"number\" && !this.state.editing) {\r\n      const worker = _storage.getStorageItem(this.props.currID);\r\n\r\n      this.setState(() => {\r\n        return {\r\n          id: this.props.currID,\r\n          firstName: worker.firstName,\r\n          lastName: worker.lastName,\r\n          middleName: worker.middleName,\r\n          birthDay: worker.birthDay,\r\n          sex: worker.sex,\r\n          hasDriveLicense: worker.hasDriveLicense,\r\n          position: worker.position,\r\n          empDate: worker.empDate,\r\n          dismisDate: worker.dismisDate,\r\n          editing: !editing\r\n        }\r\n      })\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { showModalAddWorker } = this.props;\r\n\r\n    // получение всех должностей из хранилища\r\n    const positions = _storage\r\n        .getPositions()\r\n        .map((pos, idx) => {\r\n          return (\r\n            <option key={ idx }>{ pos }</option>\r\n          )\r\n        });\r\n\r\n    const { formErrors, editing } = this.state;\r\n\r\n    // поле Дата увольнения сотрудника (добавляется в форму только при редактировании)\r\n    const dismisDate = (\r\n    <div className=\"form-group\">\r\n      <legend>Дата увольнения</legend>\r\n      <div className=\"form-group\">\r\n        <input\r\n          noValidate\r\n          onChange={ this.handleChange }\r\n          name=\"dismisDate\"\r\n          type=\"date\"\r\n          className={\r\n            `form-control\r\n            ${ formErrors.dismisDate ? \"is-invalid\" : \"\" }`\r\n          }\r\n          placeholder=\"Выберите дату\" />\r\n        {\r\n          formErrors.dismisDate ?\r\n          <span className=\"invalid-input\">{ formErrors.dismisDate }</span> : null\r\n        }\r\n      </div>\r\n    </div>);\r\n\r\n    // конструирование формы в соответсвие с вход. парам.\r\n    const children = {\r\n      title: editing ? \"Редактировать сотрудника\" :\"Добавить нового сотрудника\",\r\n      body: (\r\n        <>\r\n        <div className=\"form-group\">\r\n          <legend>Данные ФИО:</legend>\r\n          <div className=\"form-group\">\r\n            <input\r\n              value={ this.state.lastName ? this.state.lastName : \"\" }\r\n              noValidate\r\n              onChange={ this.handleChange }\r\n              type=\"text\"\r\n              name=\"lastName\"\r\n              className={\r\n                `form-control\r\n                ${ formErrors.lastName.length > 0 ? \"is-invalid\" : \"\" }`\r\n              }\r\n              placeholder=\"Фамилия\" />\r\n            {\r\n              formErrors.lastName.length > 0 ?\r\n              <span className=\"invalid-input\">{ formErrors.lastName }</span> : null\r\n            }\r\n            <input\r\n              value={ this.state.firstName ? this.state.firstName : \"\" }\r\n              noValidate\r\n              onChange={ this.handleChange }\r\n              type=\"text\"\r\n              name=\"firstName\"\r\n              className={\r\n                `form-control name-input\r\n                ${ formErrors.firstName.length > 0 ? \"is-invalid\" : \"\" }`\r\n              }\r\n              placeholder=\"Имя\" />\r\n            {\r\n              formErrors.firstName.length > 0 ?\r\n              <span className=\"invalid-input\">{ formErrors.firstName }</span> : null\r\n            }\r\n\r\n            <input\r\n              value={ this.state.middleName ? this.state.middleName : \"\" }\r\n              noValidate\r\n              onChange={ this.handleChange }\r\n              type=\"text\"\r\n              name=\"middleName\"\r\n              className={\r\n                `form-control name-input\r\n                ${ formErrors.middleName .length> 0 ? \"is-invalid\" : \"\" }`\r\n              }\r\n              placeholder=\"Отчество\" />\r\n            {\r\n              formErrors.middleName.length > 0 ?\r\n              <span className=\"invalid-input\">{ formErrors.middleName }</span> : null\r\n            }\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"form-group\">\r\n          <legend>Дата рождения</legend>\r\n          <div className=\"form-group\">\r\n            <input\r\n              value={ this.state.birthDay ? this.state.birthDay : \"\" }\r\n              noValidate\r\n              onChange={ this.handleChange }\r\n              type=\"date\"\r\n              name=\"birthDay\"\r\n              className=\"form-control\"\r\n              placeholder=\"Выберите дату\" />\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"form-group\">\r\n          <legend>Пол</legend>\r\n          <div className=\"custom-control custom-checkbox\">\r\n            <input\r\n              noValidate\r\n              onChange={ this.handleChange }\r\n              type=\"radio\"\r\n              className=\"custom-control-input\"\r\n              name=\"sex\"\r\n              value=\"male\"\r\n              id=\"optionMale\"\r\n              checked={ this.state.sex && this.state.sex === \"male\" ? true : false }\r\n              />\r\n            <label className=\"custom-control-label\" htmlFor=\"optionMale\">Мужской</label>\r\n          </div>\r\n          <div className=\"custom-control custom-checkbox\">\r\n            <input\r\n              noValidate\r\n              onChange={ this.handleChange }\r\n              type=\"radio\"\r\n              className=\"custom-control-input\"\r\n              name=\"sex\"\r\n              value=\"female\"\r\n              id=\"optionFemale\"\r\n              checked={ this.state.sex && this.state.sex === \"female\" ? true : false }\r\n            />\r\n            <label className=\"custom-control-label\" htmlFor=\"optionFemale\">Женский</label>\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"form-group\">\r\n          <legend>Наличие прав</legend>\r\n          <div className=\"custom-control custom-checkbox\">\r\n            <input\r\n              checked={ this.state.hasDriveLicense ? this.state.hasDriveLicense : false }\r\n              noValidate\r\n              onChange={ this.handleChange }\r\n              type=\"checkbox\"\r\n              name=\"hasDriveLicense\"\r\n              className=\"custom-control-input\"\r\n              id=\"hasLicense\"\r\n              />\r\n            <label className=\"custom-control-label\" htmlFor=\"hasLicense\">Есть</label>\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"form-group\">\r\n          <legend >Должность</legend>\r\n          <select\r\n            value={ this.state.position }\r\n            onChange={ this.handleChange }\r\n            name=\"position\"\r\n            className=\"custom-select\"\r\n            id=\"job-select\"\r\n          >\r\n            { positions }\r\n          </select>\r\n        </div>\r\n\r\n        <div className=\"form-group\">\r\n          <legend>Дата приема на работу</legend>\r\n          <div className=\"form-group\">\r\n            <input\r\n              value={editing ? this.state.empDate : \"\"}\r\n              noValidate\r\n              onChange={ this.handleChange }\r\n              name=\"empDate\"\r\n              type=\"date\"\r\n              className=\"form-control\"\r\n              placeholder=\"Выберите дату\" />\r\n          </div>\r\n        </div>\r\n        {\r\n          editing ? dismisDate : null\r\n        }\r\n        </>\r\n      ),\r\n      footer: (\r\n        <>\r\n        {\r\n          // вывод ошибки в случае невалидной формы\r\n          !this.state.formValid ?\r\n          <span className=\"invalid-input\">Форма недозаполнена!</span> : null\r\n        }\r\n        <span>\r\n          <FormButton\r\n            label={ editing ? \"Изменить\" : \"Добавить\" }\r\n            type=\"submit\"\r\n            css=\"btn-primary\"\r\n          />\r\n          <FormButton\r\n            label=\"Отменить\"\r\n            type=\"button\"\r\n            css=\"btn-outline-secondary cancel-btn\"\r\n            onClick={ this.handleClose }\r\n          />\r\n        </span>\r\n        </>\r\n      )\r\n    };\r\n\r\n    const addForm = (\r\n      <form onSubmit={ this.handleSubmit }>\r\n        <Modal\r\n          children={ children }\r\n          closeModal={ this.handleClose }\r\n          clazz=\"add-worker-form\"\r\n        />\r\n      </form>\r\n    );\r\n\r\n    return (\r\n      <>\r\n      {\r\n        showModalAddWorker ? addForm : null\r\n      }\r\n      </>\r\n    );\r\n  }\r\n}\r\n","import WorkerForm from './worker-form';\r\n\r\nexport default WorkerForm;\r\n","import WorkerInfo from './worker-info.js';\r\n\r\nexport default WorkerInfo;\r\n","import React from 'react';\r\nimport './worker-info.css';\r\n\r\nimport Modal from '../modal';\r\nimport FormButton from '../form-button';\r\nimport EditDelButtons from '../edit-n-del-buttons';\r\n\r\nimport SRStorage from '../../services/local-storage-service';\r\n\r\n// МОДАЛЬНОЕ ОКНО ДЛЯ ОТОБРАЖЕНИЯ ИНФОРМАЦИИ О СОТРУДНИКЕ\r\n// По полученному id достается сотрудник из хранилища\r\nconst WorkerInfo = ( { showModalWorkerInfo, closeModal, currID, onEdit, onDelete } ) => {\r\n  const _storage = new SRStorage();\r\n  let content = null;\r\n\r\n  if (showModalWorkerInfo) {\r\n    const worker = _storage.getStorageItem(currID);;\r\n    const name = `${worker.firstName} ${worker.lastName} ${worker.middleName}`\r\n\r\n    content = (\r\n      <div className=\"worker-info-content\">\r\n        <div className=\"worker-info-content-item personal-info\">\r\n        <h6>Личная информация</h6>\r\n          <span>\r\n            { `ФИО:\r\n            ${ name }`}\r\n          </span>\r\n          <span>\r\n            { `Пол:\r\n            ${ worker.sex === 'male' ? \"мужской\" : \"женский\" }`}\r\n          </span>\r\n          <span>\r\n            { `Дата рождения:\r\n            ${ worker.birthDay }`}\r\n          </span>\r\n          <span>\r\n            { `Водительские права:\r\n            ${ worker.hasDriveLicense ? \"есть\" : \"нет\" }`}\r\n          </span>\r\n\r\n        </div>\r\n        <div className=\"worker-info-content-item job-info\">\r\n          <h6>Статус в компании</h6>\r\n          <span>\r\n            { `Должность:\r\n            ${ worker.position } `}\r\n          </span>\r\n          <span>\r\n            { `Дата приема:\r\n            ${ worker.empDate } `}\r\n          </span>\r\n          {\r\n            worker.dismisDate ?\r\n              <span>\r\n                { `Дата увольнения:\r\n                ${ worker.dismisDate } `}\r\n              </span> : null\r\n          }\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  const children = {\r\n    title: \"Информация о сотруднике\",\r\n    body: content,\r\n    footer: (\r\n      <>\r\n        <EditDelButtons\r\n          onEdit={ () => { closeModal(); onEdit(currID) } }\r\n          onDelete={ () => { closeModal(); onDelete(currID) } }\r\n        />\r\n        <div>\r\n          <FormButton\r\n            label=\"Закрыть\"\r\n            type=\"button\"\r\n            css=\"btn-secondary btn-sm\"\r\n            onClick={ closeModal }\r\n          />\r\n        </div>\r\n      </>\r\n    )\r\n  }\r\n  return (\r\n    <>\r\n    {\r\n      showModalWorkerInfo ? <Modal children={ children } closeModal={ closeModal } clazz=\"worker-info\" /> : null\r\n    }\r\n    </>\r\n  );\r\n};\r\n\r\nexport default WorkerInfo;\r\n","// ПРИЛОЖЕНИЕ\r\n\r\nimport React from 'react';\r\n\r\nimport './app.css';\r\n\r\nimport AppHeader from '../app-header';\r\nimport RosterList from '../roster-list';\r\nimport SearchPanel from '../search-panel';\r\nimport WorkerStatusFilter from '../worker-status-filter';\r\n\r\nimport FormButton from '../form-button';\r\nimport WorkerForm from '../worker-form';\r\nimport WorkerInfo from '../worker-info';\r\n\r\nimport SRStorage from '../../services/local-storage-service';\r\n\r\n// подключение хранилища\r\nconst _storage = new SRStorage();\r\nexport default class App extends React.Component {\r\n  constructor() {\r\n    super();\r\n\r\n    this.state = {\r\n      workersList: _storage.getWorkersData(),\r\n      search: '',\r\n      filter: 'all',\r\n      currID: null,\r\n      showModalWorkerInfo: false,\r\n      showModalAddWorker: false,\r\n      showModalEditWorker: false\r\n    }\r\n\r\n    // показать/закрыть модалку с информаций о сотруднике\r\n    this.showWorkerInfo = (id) => {\r\n      this.setState(( { showModalWorkerInfo } ) => {\r\n        return {\r\n          currID: id,\r\n          showModalWorkerInfo: !showModalWorkerInfo\r\n        };\r\n      });\r\n    }\r\n\r\n    // показать/закрыть модалку с добавлением сотрудника\r\n    this.showAddForm = () => {\r\n      this.setState(( { showModalAddWorker } ) => {\r\n        return {\r\n          showModalAddWorker: !showModalAddWorker\r\n        };\r\n      });\r\n    }\r\n\r\n    // показать/закрыть модалку с редактированием сотрудника\r\n    this.onEditWorker = (id) => {\r\n      this.setState(( { showModalEditWorker } ) => {\r\n        return {\r\n          currID: id,\r\n          showModalEditWorker: !showModalEditWorker\r\n        };\r\n      });\r\n    }\r\n\r\n    // обновление списка при добавлении/редактировании сотрудника\r\n    this.onAdd = () => {\r\n      const workersList = _storage.getWorkersData();\r\n      this.setState({ workersList })\r\n    }\r\n\r\n    // обновление списка при удалении сотрудника\r\n    this.onDeleteWorker = (id) => {\r\n      this.setState(() => {\r\n        _storage.deleteStorageItem(id);\r\n        const workersList = _storage.getWorkersData();\r\n\r\n        return { workersList };\r\n      });\r\n    };\r\n\r\n    // обновление списка при поиске сотрудника\r\n    this.onSearch = (search) => {\r\n      this.setState({ search });\r\n    };\r\n\r\n    // обновление списка при фильтре сотрудников\r\n    this.onFilter = (filter) => {\r\n      this.setState({ filter });\r\n    };\r\n\r\n    // способ поиска\r\n    this.search = (workersList, search) => {\r\n      if (search.length == 0) {\r\n        return workersList;\r\n      }\r\n\r\n      return workersList.filter((worker) =>\r\n        worker.firstName.toLowerCase().indexOf(search.toLowerCase()) > -1 ||\r\n        worker.lastName.toLowerCase().indexOf(search.toLowerCase()) > -1 ||\r\n        worker.middleName.toLowerCase().indexOf(search.toLowerCase()) > -1\r\n      );\r\n    }\r\n\r\n    // способ фильтрации\r\n    this.filter = (workersList, filter) => {\r\n      if (filter == 'all') {\r\n        return workersList;\r\n      } else if (filter == 'stillWork') {\r\n        return workersList.filter((worker) => worker.dismisDate === \"\")\r\n      } else {\r\n        return workersList.filter((worker) => worker.dismisDate != \"\")\r\n      }\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { workersList, search, filter } = this.state;\r\n    const visibleWorkers = this.filter(this.search(workersList, search), filter)\r\n\r\n    return (\r\n      <div className=\"staff-roster-app card border-light mb-3\">\r\n        <div className=\"card-header\">\r\n          <AppHeader count={ workersList.length }/>\r\n        </div>\r\n        <div className=\"card-body\">\r\n          <div className=\"top-panel d-flex\">\r\n            <SearchPanel onSearch={ this.onSearch }/>\r\n            <WorkerStatusFilter\r\n              filter={ filter }\r\n              onFilter={ this.onFilter }\r\n            />\r\n          </div>\r\n          <RosterList\r\n            workers={ visibleWorkers }\r\n            onEdit={ this.onEditWorker }\r\n            onDelete={ this.onDeleteWorker }\r\n            onShowModal={ this.showWorkerInfo }\r\n            />\r\n          <FormButton\r\n            label=\"Добавить сотрудника\"\r\n            type=\"button\"\r\n            css=\"btn-primary float-right\"\r\n            onClick={ this.showAddForm }\r\n          />\r\n        </div>\r\n\r\n        <WorkerForm\r\n          currID={ this.state.currID }\r\n          addItem={ this.onAdd }\r\n          showModalAddWorker={ this.state.showModalEditWorker }\r\n          closeModal={ this.onEditWorker }\r\n        />\r\n        <WorkerForm\r\n          addItem={ this.onAdd }\r\n          showModalAddWorker={ this.state.showModalAddWorker }\r\n          closeModal={ this.showAddForm }\r\n        />\r\n        <WorkerInfo\r\n          showModalWorkerInfo={ this.state.showModalWorkerInfo }\r\n          onEdit={ this.onEditWorker }\r\n          onDelete={ this.onDeleteWorker }\r\n          closeModal={ this.showWorkerInfo }\r\n          currID={ this.state.currID }\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n};\r\n","import App from './app.js';\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\nimport App from './components/app';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n"],"sourceRoot":""}